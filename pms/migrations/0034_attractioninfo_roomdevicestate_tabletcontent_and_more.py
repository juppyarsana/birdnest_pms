# Generated by Django 5.2.3 on 2025-07-27 12:25

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('pms', '0033_room_amenities_room_created_at_room_description_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AttractionInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('nature', 'Nature'), ('culture', 'Culture'), ('adventure', 'Adventure'), ('dining', 'Dining'), ('shopping', 'Shopping'), ('wellness', 'Wellness')], max_length=50)),
                ('distance_km', models.FloatField(help_text='Distance from hotel in kilometers')),
                ('estimated_time', models.CharField(help_text='Estimated travel time', max_length=50)),
                ('image_url', models.URLField(blank=True, help_text='URL to attraction image')),
                ('website_url', models.URLField(blank=True, help_text='Official website URL')),
                ('is_active', models.BooleanField(default=True)),
                ('priority', models.IntegerField(default=0, help_text='Display priority (higher numbers shown first)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Attraction Info',
                'verbose_name_plural': 'Attraction Info',
                'ordering': ['-priority', 'distance_km'],
            },
        ),
        migrations.CreateModel(
            name='RoomDeviceState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('front_light', models.BooleanField(default=False)),
                ('back_light', models.BooleanField(default=False)),
                ('main_light', models.BooleanField(default=False)),
                ('sport_light', models.BooleanField(default=False)),
                ('rgb_light', models.BooleanField(default=False)),
                ('rgb_color', models.CharField(default='#FFFFFF', help_text='Hex color code', max_length=7)),
                ('rgb_brightness', models.IntegerField(default=100, help_text='Brightness percentage (0-100)')),
                ('ac_power', models.BooleanField(default=False)),
                ('ac_mode', models.CharField(choices=[('cool', 'Cool'), ('heat', 'Heat'), ('fan', 'Fan'), ('auto', 'Auto')], default='cool', max_length=10)),
                ('ac_temperature', models.IntegerField(default=24, help_text='Temperature in Celsius')),
                ('ac_fan_speed', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('auto', 'Auto')], default='auto', max_length=10)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('room', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='device_state', to='pms.room')),
            ],
            options={
                'verbose_name': 'Room Device State',
                'verbose_name_plural': 'Room Device States',
            },
        ),
        migrations.CreateModel(
            name='TabletContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('content_type', models.CharField(choices=[('welcome', 'Welcome Message'), ('announcement', 'Announcement'), ('promotion', 'Promotion'), ('service', 'Service Info'), ('emergency', 'Emergency Info')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('priority', models.IntegerField(default=0, help_text='Display priority (higher numbers shown first)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('target_rooms', models.ManyToManyField(blank=True, help_text='Leave empty to show on all tablets', to='pms.room')),
            ],
            options={
                'verbose_name': 'Tablet Content',
                'verbose_name_plural': 'Tablet Content',
                'ordering': ['-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TabletDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tablet_id', models.CharField(help_text='Unique identifier for the tablet', max_length=50, unique=True)),
                ('esp32_ip', models.GenericIPAddressField(help_text='IP address of the ESP32 controller')),
                ('is_active', models.BooleanField(default=True)),
                ('last_ping', models.DateTimeField(blank=True, help_text='Last successful ping to ESP32', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('room', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tablet', to='pms.room')),
            ],
            options={
                'verbose_name': 'Tablet Device',
                'verbose_name_plural': 'Tablet Devices',
            },
        ),
    ]
