# Generated by Django 5.2.3 on 2025-08-07 09:53

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('iot', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ESP32Configuration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_light_on_endpoint', models.CharField(default='light/main/on', help_text='Endpoint for turning main light ON', max_length=100)),
                ('main_light_off_endpoint', models.CharField(default='light/main/off', help_text='Endpoint for turning main light OFF', max_length=100)),
                ('main_light_post_data', models.JSONField(blank=True, default=dict, help_text='Additional POST data for main light commands')),
                ('rgb_light_on_endpoint', models.CharField(default='light/rgb/on', help_text='Endpoint for turning RGB light ON', max_length=100)),
                ('rgb_light_off_endpoint', models.CharField(default='light/rgb/off', help_text='Endpoint for turning RGB light OFF', max_length=100)),
                ('rgb_light_color_endpoint', models.CharField(default='light/rgb/color', help_text='Endpoint for RGB color control', max_length=100)),
                ('rgb_light_post_data', models.JSONField(blank=True, default=dict, help_text='Additional POST data for RGB light commands')),
                ('ac_power_endpoint', models.CharField(default='ac/power', help_text='Endpoint for AC power control', max_length=100)),
                ('ac_temperature_endpoint', models.CharField(default='ac/temperature', help_text='Endpoint for AC temperature control', max_length=100)),
                ('ac_mode_endpoint', models.CharField(default='ac/mode', help_text='Endpoint for AC mode control', max_length=100)),
                ('ac_post_data', models.JSONField(blank=True, default=dict, help_text='Additional POST data for AC commands')),
                ('reading_light_on_endpoint', models.CharField(default='light/reading/on', help_text='Endpoint for turning reading light ON', max_length=100)),
                ('reading_light_off_endpoint', models.CharField(default='light/reading/off', help_text='Endpoint for turning reading light OFF', max_length=100)),
                ('reading_light_post_data', models.JSONField(blank=True, default=dict, help_text='Additional POST data for reading light commands')),
                ('bedside_light_on_endpoint', models.CharField(default='light/bedside/on', help_text='Endpoint for turning bedside light ON', max_length=100)),
                ('bedside_light_off_endpoint', models.CharField(default='light/bedside/off', help_text='Endpoint for turning bedside light OFF', max_length=100)),
                ('bedside_light_post_data', models.JSONField(blank=True, default=dict, help_text='Additional POST data for bedside light commands')),
                ('custom_endpoint_1', models.CharField(blank=True, help_text='Custom endpoint 1', max_length=100)),
                ('custom_endpoint_1_data', models.JSONField(blank=True, default=dict, help_text='POST data for custom endpoint 1')),
                ('custom_endpoint_1_name', models.CharField(blank=True, help_text='Display name for custom endpoint 1', max_length=50)),
                ('custom_endpoint_2', models.CharField(blank=True, help_text='Custom endpoint 2', max_length=100)),
                ('custom_endpoint_2_data', models.JSONField(blank=True, default=dict, help_text='POST data for custom endpoint 2')),
                ('custom_endpoint_2_name', models.CharField(blank=True, help_text='Display name for custom endpoint 2', max_length=50)),
                ('custom_endpoint_3', models.CharField(blank=True, help_text='Custom endpoint 3', max_length=100)),
                ('custom_endpoint_3_data', models.JSONField(blank=True, default=dict, help_text='POST data for custom endpoint 3')),
                ('custom_endpoint_3_name', models.CharField(blank=True, help_text='Display name for custom endpoint 3', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('esp32_device', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='configuration', to='iot.esp32device')),
            ],
            options={
                'verbose_name': 'ESP32 Configuration',
                'verbose_name_plural': 'ESP32 Configurations',
            },
        ),
    ]
